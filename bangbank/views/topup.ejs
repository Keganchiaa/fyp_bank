<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Top Up - BangBank</title>
    <style>
        /* Reset and base styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #e0e0e0;
            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 2rem;
        }

        /* Background decoration */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 25% 25%, rgba(0, 255, 255, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 75% 75%, rgba(255, 0, 255, 0.1) 0%, transparent 50%);
            pointer-events: none;
            z-index: -1;
        }

        .container {
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(15px);
            padding: 3rem 4rem;
            border-radius: 20px;
            border: 1px solid rgba(0, 255, 255, 0.3);
            box-shadow: 0 8px 32px rgba(0, 255, 255, 0.2);
            max-width: 600px;
            width: 100%;
            position: relative;
            overflow: hidden;
            animation: fadeIn 0.6s ease-out;
        }

        .container::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(0, 255, 255, 0.1), transparent);
            transition: left 0.5s;
        }

        .container:hover::before {
            left: 100%;
        }

        .section-header {
            font-size: 2.5rem;
            color: #ffffff;
            font-weight: 300;
            margin-bottom: 2rem;
            text-align: center;
            text-shadow: 0 0 20px rgba(0, 255, 255, 0.5);
            background: linear-gradient(135deg, #00ffff, #ff00ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .error-message {
            background: rgba(255, 0, 100, 0.2);
            border: 1px solid rgba(255, 0, 100, 0.5);
            color: #ff6b9d;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 2rem;
            text-align: center;
            backdrop-filter: blur(10px);
            box-shadow: 0 4px 15px rgba(255, 0, 100, 0.2);
        }

        .empty-state {
            text-align: center;
            padding: 3rem 2rem;
            background: rgba(0, 0, 0, 0.5);
            border-radius: 15px;
            border: 1px solid rgba(0, 255, 255, 0.2);
            margin-bottom: 2rem;
        }

        .empty-state h2 {
            color: #ffffff;
            font-size: 1.8rem;
            margin-bottom: 1rem;
            text-shadow: 0 0 15px rgba(0, 255, 255, 0.4);
        }

        .empty-state p {
            color: rgba(224, 224, 224, 0.8);
            font-size: 1.1rem;
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        label {
            color: #00ffff;
            font-weight: 600;
            font-size: 1.1rem;
            text-shadow: 0 0 10px rgba(0, 255, 255, 0.3);
            margin-bottom: 0.5rem;
        }

        select,
        input[type="number"] {
            background: rgba(0, 0, 0, 0.6);
            border: 1px solid rgba(0, 255, 255, 0.3);
            border-radius: 10px;
            padding: 1rem 1.5rem;
            color: #e0e0e0;
            font-size: 1rem;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            box-shadow: 0 4px 15px rgba(0, 255, 255, 0.1);
        }

        select:focus,
        input[type="number"]:focus {
            outline: none;
            border-color: rgba(255, 0, 255, 0.5);
            box-shadow: 0 0 20px rgba(255, 0, 255, 0.3);
            background: rgba(0, 0, 0, 0.8);
        }

        select option {
            background: #1a1a2e;
            color: #e0e0e0;
            padding: 0.5rem;
        }

        .btn {
            text-decoration: none;
            padding: 1.2rem 3rem;
            border-radius: 30px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 0.95rem;
            position: relative;
            overflow: hidden;
            border: none;
            cursor: pointer;
            text-align: center;
            display: inline-block;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 0, 255, 0.3), transparent);
            transition: left 0.5s;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn-primary {
            background: linear-gradient(135deg, #00ffff, #ff00ff);
            color: #000000;
            box-shadow: 0 6px 20px rgba(0, 255, 255, 0.4);
            font-weight: 700;
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 30px rgba(0, 255, 255, 0.6);
        }

        .btn-primary:active {
            transform: translateY(-1px);
        }

        .back-button-container {
            text-align: center;
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 1px solid rgba(0, 255, 255, 0.2);
        }

        .back-button-container .btn {
            background: rgba(0, 0, 0, 0.6);
            color: #e0e0e0;
            border: 1px solid rgba(0, 255, 255, 0.3);
            box-shadow: 0 4px 15px rgba(0, 255, 255, 0.2);
        }

        .back-button-container .btn:hover {
            background: rgba(0, 255, 255, 0.1);
            color: #00ffff;
            border-color: rgba(0, 255, 255, 0.5);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 255, 255, 0.3);
        }

        /* Form group styling */
        .form-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            body {
                padding: 1rem;
            }

            .container {
                padding: 2rem;
                max-width: 100%;
            }

            .section-header {
                font-size: 2rem;
            }

            .btn {
                padding: 1rem 2rem;
                font-size: 0.9rem;
            }
        }

        @media (max-width: 480px) {
            .container {
                padding: 1.5rem;
            }

            .section-header {
                font-size: 1.8rem;
            }

            select,
            input[type="number"] {
                padding: 0.8rem 1rem;
            }
        }

        /* Animations */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Focus states for accessibility */
        .btn:focus {
            outline: 2px solid rgba(0, 255, 255, 0.5);
            outline-offset: 2px;
        }

        /* Loading state for form submission */
        form.loading {
            opacity: 0.7;
            pointer-events: none;
        }

        /* Success state styling */
        .success-message {
            background: rgba(0, 255, 100, 0.2);
            border: 1px solid rgba(0, 255, 100, 0.5);
            color: #00ff64;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 2rem;
            text-align: center;
            backdrop-filter: blur(10px);
            box-shadow: 0 4px 15px rgba(0, 255, 100, 0.2);
        }
    </style>
</head>

<body>
    <div class="container">
        <h2 class="section-header">Top Up Savings Account</h2>

        <% if (error) { %>
            <div class="error-message">
                <%= error %>
            </div>
        <% } %>

        <% if (accounts.length === 0) { %>
            <div class="empty-state">
                <h2>No Eligible Accounts</h2>
                <p>You don't have any active savings accounts to top up.</p>
            </div>
        <% } else { %>
            <form method="POST" onsubmit="this.action = '/account/topup/' + this.account_id.value;">
                <div class="form-group">
                    <label for="account_id">Choose Account:</label>
                    <select name="account_id" id="account_id" required>
                        <% accounts.forEach(a => { %>
                            <option value="<%= a.account_id %>">
                                <%= a.product_name %> ($<%= parseFloat(a.balance).toFixed(2) %>)
                            </option>
                        <% }) %>
                    </select>
                </div>

                <div class="form-group">
                    <label for="amount">Amount:</label>
                    <input type="number" name="amount" id="amount" step="0.01" min="0.01" required placeholder="Enter amount to top up">
                </div>

                <button type="submit" class="btn btn-primary">Top Up Account</button>
            </form>
        <% } %>

        <div class="back-button-container">
            <a href="/user/dashboard" class="btn">← Back to Dashboard</a>
        </div>
    </div>

    <script>
        // Add loading state on form submission
        document.querySelector('form')?.addEventListener('submit', function() {
            this.classList.add('loading');
            this.querySelector('button[type="submit"]').textContent = 'Processing...';
        });

        // Add input validation feedback
        const amountInput = document.querySelector('input[name="amount"]');
        if (amountInput) {
            amountInput.addEventListener('input', function() {
                const value = parseFloat(this.value);
                if (value <= 0) {
                    this.style.borderColor = 'rgba(255, 0, 100, 0.5)';
                } else {
                    this.style.borderColor = 'rgba(0, 255, 255, 0.3)';
                }
            });
        }
    </script>
</body>

</html>